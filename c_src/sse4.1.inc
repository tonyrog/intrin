// _mm_blend_epi16 (__m128i __X, __m128i __Y, const int __M)
// _mm_blendv_epi8 (__m128i __X, __m128i __Y, __m128i __M)
// _mm_blend_ps (__m128 __X, __m128 __Y, const int __M)
// _mm_blendv_ps (__m128 __X, __m128 __Y, __m128 __M)
// _mm_blend_pd (__m128d __X, __m128d __Y, const int __M)
// _mm_blendv_pd (__m128d __X, __m128d __Y, __m128d __M)
// _mm_dp_ps (__m128 __X, __m128 __Y, const int __M)
// _mm_dp_pd (__m128d __X, __m128d __Y, const int __M)
// _mm_cmpeq_epi64 (__m128i __X, __m128i __Y)
op_XX(_,mm_min_epi8, __m128i, __m128i)
op_XX(_,mm_max_epi8, __m128i, __m128i)
op_XX(_,mm_min_epu16, __m128i, __m128i)
op_XX(_,mm_max_epu16, __m128i, __m128i)
op_XX(_,mm_min_epi32, __m128i, __m128i)
op_XX(_,mm_max_epi32, __m128i, __m128i)
op_XX(_,mm_min_epu32, __m128i, __m128i)
op_XX(_,mm_max_epu32, __m128i, __m128i)
op_XX(_,mm_mullo_epi32, __m128i, __m128i)
op_XX(_,mm_mul_epi32, __m128i, __m128i)
bool_XX(_,mm_testz_si128, __m128i, __m128i)
bool_XX(_,mm_testc_si128, __m128i, __m128i)
bool_XX(_,mm_testnzc_si128, __m128i, __m128i)
// _mm_test_all_zeros(M, V) _mm_testz_si128 ((M), (V))
// _mm_test_all_ones(V)
// _mm_test_mix_ones_zeros(M, V)
// _mm_insert_ps (__m128 __D, __m128 __S, const int __N)
// _mm_insert_ps(D, S, N)
// _mm_extract_ps (__m128 __X, const int __N)
// _mm_extract_ps(X, N)
// _mm_insert_epi8 (__m128i __D, int __S, const int __N)
// _mm_insert_epi32 (__m128i __D, int __S, const int __N)
// _mm_insert_epi64 (__m128i __D, long long __S, const int __N)
// _mm_insert_epi8(D, S, N)
// _mm_insert_epi32(D, S, N)
// _mm_insert_epi64(D, S, N)
// _mm_extract_epi8 (__m128i __X, const int __N)
// _mm_extract_epi32 (__m128i __X, const int __N)
// _mm_extract_epi64 (__m128i __X, const int __N)
// _mm_extract_epi8(X, N)
// _mm_extract_epi32(X, N)
// _mm_extract_epi64(X, N)
// _mm_minpos_epu16 (__m128i __X)
// _mm_round_pd (__m128d __V, const int __M)
// _mm_round_sd(__m128d __D, __m128d __V, const int __M)
// _mm_round_pd(V, M)
// _mm_round_sd(D, V, M)
// _mm_round_ps (__m128 __V, const int __M)
// _mm_round_ss (__m128 __D, __m128 __V, const int __M)
// _mm_round_ps(V, M)
// _mm_round_ss(D, V, M)
// _mm_ceil_pd(V)	   _mm_round_pd ((V), _MM_FROUND_CEIL)
// _mm_ceil_sd(D, V)  _mm_round_sd ((D), (V), _MM_FROUND_CEIL)
// _mm_floor_pd(V)	   _mm_round_pd((V), _MM_FROUND_FLOOR)
// _mm_floor_sd(D, V) _mm_round_sd ((D), (V), _MM_FROUND_FLOOR)
// _mm_ceil_ps(V)	   _mm_round_ps ((V), _MM_FROUND_CEIL)
// _mm_ceil_ss(D, V)  _mm_round_ss ((D), (V), _MM_FROUND_CEIL)
// _mm_floor_ps(V)	   _mm_round_ps ((V), _MM_FROUND_FLOOR)
// _mm_floor_ss(D, V) _mm_round_ss ((D), (V), _MM_FROUND_FLOOR)
// _mm_cvtepi8_epi32 (__m128i __X)
// _mm_cvtepi16_epi32 (__m128i __X)
// _mm_cvtepi8_epi64 (__m128i __X)
// _mm_cvtepi32_epi64 (__m128i __X)
// _mm_cvtepi16_epi64 (__m128i __X)
// _mm_cvtepi8_epi16 (__m128i __X)
// _mm_cvtepu8_epi32 (__m128i __X)
// _mm_cvtepu16_epi32 (__m128i __X)
// _mm_cvtepu8_epi64 (__m128i __X)
// _mm_cvtepu32_epi64 (__m128i __X)
// _mm_cvtepu16_epi64 (__m128i __X)
// _mm_cvtepu8_epi16 (__m128i __X)
// _mm_packus_epi32 (__m128i __X, __m128i __Y)
// _mm_mpsadbw_epu8 (__m128i __X, __m128i __Y, const int __M)
// _mm_mpsadbw_epu8(X, Y, M)
// _mm_stream_load_si128 (__m128i *__X)
// _mm_cmpistrm (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpistri (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpestrm (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpestri (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpistrm(X, Y, M)
// _mm_cmpistri(X, Y, M)
// _mm_cmpestrm(X, LX, Y, LY, M)
// _mm_cmpestri(X, LX, Y, LY, M)
// _mm_cmpistra (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpistrc (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpistro (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpistrs (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpistrz (__m128i __X, __m128i __Y, const int __M)
// _mm_cmpestra (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpestrc (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpestro (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpestrs (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpestrz (__m128i __X, int __LX, __m128i __Y, int __LY, const int __M)
// _mm_cmpistra(X, Y, M)
// _mm_cmpistrc(X, Y, M)
// _mm_cmpistro(X, Y, M)
// _mm_cmpistrs(X, Y, M)
// _mm_cmpistrz(X, Y, M)
// _mm_cmpestra(X, LX, Y, LY, M)
// _mm_cmpestrc(X, LX, Y, LY, M)
// _mm_cmpestro(X, LX, Y, LY, M)
// _mm_cmpestrs(X, LX, Y, LY, M)
// _mm_cmpestrz(X, LX, Y, LY, M)
// _mm_cmpgt_epi64 (__m128i __X, __m128i __Y)
// _mm_popcnt_u32 (unsigned int __X)
// _mm_popcnt_u64 (unsigned long long __X)
// _mm_crc32_u8 (unsigned int __C, unsigned char __V)
// _mm_crc32_u16 (unsigned int __C, unsigned short __V)
// _mm_crc32_u32 (unsigned int __C, unsigned int __V)
// _mm_crc32_u64 (unsigned long long __C, unsigned long long __V)
